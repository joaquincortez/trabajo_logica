{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import axios from\"axios\";import{faCode}from'@fortawesome/free-solid-svg-icons';import Encabezado from'./Encabezado';axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';var respuestas={\"fracaso\":\"Se ha producido un error.\",\"materia_insuficiente\":\"No se han seleccionado materias suficientes para producir ningún helado, intente nuevamente.\",\"opcion_no_disponible\":\"El objetivo de optimización indicado no está disponible.\",\"maximizacion_ganancias\":\"Maximizar las ganancias\",\"minimizacion_costos\":\"Minimizar los costos\",\"maximizacion_producción\":\"Maximizar la producción\"};var Resultados=/*#__PURE__*/function(_React$Component){_inherits(Resultados,_React$Component);var _super=_createSuper(Resultados);function Resultados(props){var _this;_classCallCheck(this,Resultados);_this=_super.call(this,props);_this.requestHelado=function(info){axios.post(\"http://localhost:8000/calculoshelado/\",info).then(function(res){console.log(res);_this.setState({datosHelado:Object.keys(res.data).map(function(key){return[key,res.data[key]];})});}).catch(function(err){console.log(err);});};_this.requestMateria=function(info){axios.post(\"http://localhost:8000/calculosmateria/\",info).then(function(res){console.log(res);_this.setState({datosMateria:Object.keys(res.data).map(function(key){return[key,res.data[key]];})});}).catch(function(err){console.log(err);});};_this.requestAmbos=function(helados,materias,objetivo){axios.post(\"http://localhost:8000/calculos/\",{helados:helados,materias:materias,\"objetivo\":objetivo}).then(function(res){console.log(res);_this.setState({resultOpt:res.data});}).catch(function(err){console.log(err);});};_this.state={datosHelado:[],datosMateria:[],resultOpt:{}};return _this;}_createClass(Resultados,[{key:\"usarQuery\",value:function usarQuery(){var search=window.location.href;// could be '?foo=bar'\nvar params=new URLSearchParams(search);return params;}},{key:\"enviarRequest\",value:function enviarRequest(sabores){var json=JSON.stringify(sabores);axios.post('http://localhost:8000/calculos/',json,{headers:{'Content-Type':'application/json'}});}},{key:\"componentDidMount\",value:function componentDidMount(){var query=this.usarQuery();var parametros=Array.from(query.entries());var helados={};var materias={};parametros[0][0]=\"sabor1\";//porque devuelve como primero toda la url\nconsole.log(\"parametros son\",parametros);var i=0;for(i;i<parametros.length-1;i+=2){console.log(\"sabor\".localeCompare(parametros[i][0].substring(0,5))===0);if(\"sabor\".localeCompare(parametros[i][0].substring(0,5))===0){console.log('entro');helados[parametros[i][1]]=parametros[i+1][1];console.log(parametros[i][1]+\" \"+parametros[i+1][1]);}else break;}for(i;i<parametros.length-1;i+=2){console.log('aca');materias[parametros[i][1]]=parametros[i+1][1];}var objetivo=parametros[parametros.length-1][1];console.log(\"sabores son\",helados);console.log(\"materias son\",materias);var resHelado=this.requestHelado(helados);console.log(resHelado);var resMateria=this.requestMateria(materias);console.log(resMateria);var resAmbos=this.requestAmbos(helados,materias,objetivo);console.log(\"respuesta ambos es\",resAmbos);}},{key:\"render\",value:function render(){console.log(this.state.datosMateria);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Encabezado,{titulo:\"Optimizaci\\xF3n lineal\",descripcion:\"Resultados de la consulta.\",icono:faCode}),/*#__PURE__*/React.createElement(\"div\",{className:\"seccion-result\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Presupuesto en helados\"),this.state.datosHelado.map(function(elem){return/*#__PURE__*/React.createElement(\"li\",null,\"Total en \",elem[0],\" es $\",elem[1]);})),/*#__PURE__*/React.createElement(\"div\",{className:\"seccion-result\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Presupuesto en materias primas\"),this.state.datosMateria.map(function(elem){return/*#__PURE__*/React.createElement(\"li\",null,\"Total en \",elem[0],\" es $\",elem[1]);})),/*#__PURE__*/React.createElement(\"div\",{className:\"seccion-result\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Respuesta de Optimizaci\\xF3n\"),/*#__PURE__*/React.createElement(\"div\",null,this.state.resultOpt[\"resultado\"]===\"fracaso\"&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",{className:\"text-danger\"},respuestas[this.state.resultOpt[\"resultado\"]]),/*#__PURE__*/React.createElement(\"p\",null,respuestas[this.state.resultOpt[\"razon_fracaso\"]])),this.state.resultOpt[\"optimizacion\"]&&this.state.resultOpt[\"optimizacion\"][\"resultado\"]===\"fracaso\"&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",{className:\"text-warning\"},\"El problema no tiene una soluci\\xF3n \\xF3ptima.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"No se pudo encontrar una soluci\\xF3n \\xF3ptima para las restricciones seleccionadas.\")),this.state.resultOpt[\"optimizacion\"]&&this.state.resultOpt[\"optimizacion\"][\"resultado\"]===\"exito\"&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Objetivo: \",respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]]),/*#__PURE__*/React.createElement(\"h5\",null,\"Se produjeron ganancias por $\",this.state.resultOpt[\"optimizacion\"][\"objective_value\"]),/*#__PURE__*/React.createElement(\"h5\",null,\"Se deben producir las siguientes cantidades de helados para \",respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]].toLowerCase(),\":\"),/*#__PURE__*/React.createElement(\"ul\",null,this.state.resultOpt.optimizacion.soluciones.map(function(solucion){return/*#__PURE__*/React.createElement(\"li\",null,console.log(\"solucion es\",solucion),solucion.cantidad,\" unidades de \",solucion.nombre);}))))));}}]);return Resultados;}(React.Component);export default Resultados;","map":{"version":3,"sources":["C:/Users/joaqu/Documents/Trabajo logica/frontend/src/components/Resultados.js"],"names":["React","axios","faCode","Encabezado","defaults","xsrfCookieName","xsrfHeaderName","respuestas","Resultados","props","requestHelado","info","post","then","res","console","log","setState","datosHelado","Object","keys","data","map","key","catch","err","requestMateria","datosMateria","requestAmbos","helados","materias","objetivo","resultOpt","state","search","window","location","href","params","URLSearchParams","sabores","json","JSON","stringify","headers","query","usarQuery","parametros","Array","from","entries","i","length","localeCompare","substring","resHelado","resMateria","resAmbos","elem","toLowerCase","optimizacion","soluciones","solucion","cantidad","nombre","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { faCode }  from '@fortawesome/free-solid-svg-icons';\r\nimport Encabezado from './Encabezado';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst respuestas = {\r\n    \"fracaso\": \"Se ha producido un error.\",\r\n    \"materia_insuficiente\": \"No se han seleccionado materias suficientes para producir ningún helado, intente nuevamente.\",\r\n    \"opcion_no_disponible\": \"El objetivo de optimización indicado no está disponible.\",\r\n    \"maximizacion_ganancias\": \"Maximizar las ganancias\",\r\n    \"minimizacion_costos\": \"Minimizar los costos\",\r\n    \"maximizacion_producción\": \"Maximizar la producción\",\r\n\r\n};\r\n\r\nclass Resultados extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          datosHelado: [],\r\n          datosMateria: [],\r\n          resultOpt: {},\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    enviarRequest(sabores){\r\n        const json = JSON.stringify(sabores);\r\n        axios.post('http://localhost:8000/calculos/', json, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    }\r\n\r\n    requestHelado = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculoshelado/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosHelado: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestMateria = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculosmateria/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosMateria: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestAmbos = (helados, materias, objetivo) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculos/\", {helados, materias, \"objetivo\": objetivo})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ resultOpt: res.data })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let helados = {};\r\n        let materias = {}\r\n        parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n        console.log(\"parametros son\", parametros);\r\n        let i =0;\r\n        for(i; i<parametros.length-1; i+=2){\r\n            console.log(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0)\r\n            if(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0){\r\n                console.log('entro');\r\n                helados[parametros[i][1]] = parametros[i+1][1];\r\n                console.log(parametros[i][1] + \" \" + parametros[i+1][1])\r\n            }\r\n            else\r\n                break;\r\n        }\r\n\r\n        for(i; i<parametros.length -1; i+=2){\r\n            console.log('aca');\r\n            materias[parametros[i][1]] = parametros[i+1][1];\r\n        }\r\n\r\n        let objetivo = parametros[parametros.length-1][1]\r\n        console.log(\"sabores son\", helados);\r\n        console.log(\"materias son\",materias);\r\n        const resHelado = this.requestHelado(helados);\r\n        console.log(resHelado);\r\n        const resMateria = this.requestMateria(materias);\r\n        console.log(resMateria);\r\n        const resAmbos = this.requestAmbos(helados, materias, objetivo);\r\n        console.log(\"respuesta ambos es\", resAmbos);\r\n    }\r\n\r\n    render(){ \r\n        console.log(this.state.datosMateria);\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Optimización lineal\" descripcion = \"Resultados de la consulta.\" icono = {faCode}/>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en helados</h2>\r\n                    {this.state.datosHelado.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en materias primas</h2>\r\n                    {this.state.datosMateria.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                <h2>Respuesta de Optimización</h2>\r\n                    <div>\r\n                        {this.state.resultOpt[\"resultado\"] === \"fracaso\" && \r\n                            <div>\r\n                            <h3 className=\"text-danger\">{respuestas[this.state.resultOpt[\"resultado\"]]}</h3>\r\n                            <p>{respuestas[this.state.resultOpt[\"razon_fracaso\"]]}</p>\r\n                            </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"fracaso\" && \r\n                        <div>\r\n                            <h3 className=\"text-warning\">El problema no tiene una solución óptima.</h3>\r\n                            <p className=\"text-secondary\">No se pudo encontrar una solución óptima para las restricciones seleccionadas.</p>\r\n                        </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"exito\" &&\r\n                        <div> \r\n                            <h4>Objetivo: {respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]]}</h4>\r\n                            <h5>Se produjeron ganancias por ${this.state.resultOpt[\"optimizacion\"][\"objective_value\"]}</h5>\r\n                            <h5>Se deben producir las siguientes cantidades de helados para {respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]].toLowerCase()}:</h5>\r\n                            <ul>\r\n                                {this.state.resultOpt.optimizacion.soluciones.map(solucion =>\r\n                                    <li>\r\n                                        {console.log(\"solucion es\", solucion)}\r\n                                        {solucion.cantidad} unidades de {solucion.nombre}\r\n                                    </li> )}\r\n                            </ul>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultados;"]},"metadata":{},"sourceType":"module"}