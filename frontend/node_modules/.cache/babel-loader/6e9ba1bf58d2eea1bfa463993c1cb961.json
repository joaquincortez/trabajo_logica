{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\src\\\\components\\\\ResultadosScheduling.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Encabezado from './Encabezado';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass ResultadosScheduling extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestResults = hel => {\n      axios.post(\"http://localhost:8000/scheduling/\", {\n        helados: hel\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          datosGeneral: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      datos: []\n    };\n  }\n\n  usarQuery() {\n    const search = window.location.href; // could be '?foo=bar'\n\n    let params = new URLSearchParams(search);\n    return params;\n  }\n\n  componentDidMount() {\n    let query = this.usarQuery();\n    let parametros = Array.from(query.entries());\n    let id_helados = [];\n    console.log(\" parametros es \", parametros);\n\n    if (parametros != null) {\n      parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\n\n      for (let parametro in parametros) {\n        console.log(parametro);\n        id_helados.push(parametro[1]);\n      }\n\n      console.log(\"id helados es\", id_helados);\n      this.requestResults(id_helados);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Resultados scheduling\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, this.state.datos));\n  }\n\n}\n\nexport default ResultadosScheduling;","map":{"version":3,"sources":["C:/Users/joaqu/Documents/Trabajo logica/frontend/src/components/ResultadosScheduling.js"],"names":["React","axios","Encabezado","defaults","xsrfCookieName","xsrfHeaderName","ResultadosScheduling","Component","constructor","props","requestResults","hel","post","helados","then","res","console","log","setState","datosGeneral","data","catch","err","state","datos","usarQuery","search","window","location","href","params","URLSearchParams","componentDidMount","query","parametros","Array","from","entries","id_helados","parametro","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEAD,KAAK,CAACE,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAH,KAAK,CAACE,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AAEA,MAAMC,oBAAN,SAAmCN,KAAK,CAACO,SAAzC,CAAkD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,cAbkB,GAaAC,GAAD,IAAS;AACtBV,MAAAA,KAAK,CACJW,IADD,CACM,mCADN,EAC2C;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAD3C,EAECG,IAFD,CAEMC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKG,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEJ,GAAG,CAACK;AAApB,SAAd;AAA0C,OAJ9C,EAKCC,KALD,CAKOC,GAAG,IAAI;AAACN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AAAiB,OALhC;AAMH,KApBiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA/B,CADQ,CAC6B;;AACrC,QAAIC,MAAM,GAAI,IAAIC,eAAJ,CAAoBL,MAApB,CAAd;AACA,WAAOI,MAAP;AACH;;AAWDE,EAAAA,iBAAiB,GAAE;AACf,QAAIC,KAAK,GAAG,KAAKR,SAAL,EAAZ;AACA,QAAIS,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,OAAN,EAAX,CAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BiB,UAA9B;;AACA,QAAGA,UAAU,IAAI,IAAjB,EAAsB;AAClBA,MAAAA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,IAAmB,QAAnB,CADkB,CACW;;AAC7B,WAAK,IAAIK,SAAT,IAAsBL,UAAtB,EAAiC;AAC7BlB,QAAAA,OAAO,CAACC,GAAR,CAAYsB,SAAZ;AACAD,QAAAA,UAAU,CAACE,IAAX,CAAgBD,SAAS,CAAC,CAAD,CAAzB;AACH;;AACDvB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BqB,UAA5B;AACA,WAAK5B,cAAL,CAAoB4B,UAApB;AACH;AAEJ;;AAEDG,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKlB,KAAL,CAAWC,KAAf,CAFJ,CADJ;AAMH;;AAhD6C;;AAmDlD,eAAelB,oBAAf","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport Encabezado from './Encabezado';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nclass ResultadosScheduling extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            datos: [],\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    requestResults = (hel) => {\r\n        axios\r\n        .post(\"http://localhost:8000/scheduling/\", {helados: hel})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosGeneral: res.data })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let id_helados = [];\r\n        console.log(\" parametros es \",parametros)\r\n        if(parametros != null){\r\n            parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n            for (let parametro in parametros){\r\n                console.log(parametro)\r\n                id_helados.push(parametro[1])\r\n            }\r\n            console.log(\"id helados es\",id_helados);\r\n            this.requestResults(id_helados);\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Resultados scheduling</h1>\r\n                <p>{this.state.datos}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultadosScheduling;"]},"metadata":{},"sourceType":"module"}