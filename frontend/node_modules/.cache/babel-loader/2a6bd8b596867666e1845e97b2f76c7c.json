{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\src\\\\components\\\\ResultadosScheduling.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { Chart } from \"react-google-charts\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass ResultadosScheduling extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestResults = hel => {\n      axios.post(\"http://localhost:8000/scheduling/\", {\n        helados: hel\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          datos: res.data\n        });\n        this.handleGrafico(res.data.rows);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleGrafico = filas => {\n      let sumaHoras = horas => {\n        var dt = new Date();\n        console.log(\"antes dt es\", dt);\n        dt.setHours(dt.getHours() + horas);\n        console.log(\"despues dt es \", dt);\n        return dt;\n      };\n\n      let corrige_horas = rows => {\n        for (let i = 0; i < rows.length; i++) {\n          rows[i][3] = sumaHoras(rows[i][3]);\n          rows[i][4] = sumaHoras(rows[i][4]);\n        }\n\n        return rows;\n      };\n\n      let nuevo_filas = corrige_horas(filas);\n      let datos_graph = [[{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]].concat(nuevo_filas);\n      this.setState({\n        datosGrafico: datos_graph\n      });\n      console.log(\"datos grafico es\", this.state.datosGrafico);\n    };\n\n    this.state = {\n      datos: [],\n      datosGrafico: []\n    };\n  }\n\n  usarQuery() {\n    const search = window.location.href; // could be '?foo=bar'\n\n    let params = new URLSearchParams(search);\n    return params;\n  }\n\n  componentDidMount() {\n    let query = this.usarQuery();\n    let parametros = Array.from(query.entries());\n    let id_helados = [];\n    console.log(\" parametros es \", parametros);\n\n    if (parametros != null) {\n      parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\n\n      for (let i = 0; i < parametros.length; i++) {\n        console.log(parametros[i]);\n        id_helados.push(parametros[i][1]);\n      }\n\n      console.log(\"id helados es\", id_helados);\n      this.requestResults(id_helados);\n    }\n\n    console.log(\"state aca es\", this.state.datos);\n    console.log(\"rows es\", this.state.datos.rows);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Resultados scheduling\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"La duraci\\xF3n \\xF3ptima es de \", this.state.datos.duracion_optima, \" horas.\"), this.state.datos.rows && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        maxWidth: 900\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 42\n      }\n    }, console.log(\"datos_graph es\", datos_graph), /*#__PURE__*/React.createElement(Chart, {\n      width: '100%',\n      height: '1200px',\n      chartType: \"Gantt\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, \"Loading Chart\"),\n      data: this.state.datosGrafico,\n      rootProps: {\n        'data-testid': '3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ResultadosScheduling;","map":{"version":3,"sources":["C:/Users/joaqu/Documents/Trabajo logica/frontend/src/components/ResultadosScheduling.js"],"names":["React","axios","Chart","defaults","xsrfCookieName","xsrfHeaderName","ResultadosScheduling","Component","constructor","props","requestResults","hel","post","helados","then","res","console","log","setState","datos","data","handleGrafico","rows","catch","err","filas","sumaHoras","horas","dt","Date","setHours","getHours","corrige_horas","i","length","nuevo_filas","datos_graph","type","label","concat","datosGrafico","state","usarQuery","search","window","location","href","params","URLSearchParams","componentDidMount","query","parametros","Array","from","entries","id_helados","push","render","duracion_optima","display","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nclass ResultadosScheduling extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            datos: [],\r\n            datosGrafico: [],\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    requestResults = (hel) => {\r\n        axios\r\n        .post(\"http://localhost:8000/scheduling/\", {helados: hel})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datos: res.data });\r\n            this.handleGrafico(res.data.rows);\r\n        })\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let id_helados = [];\r\n        console.log(\" parametros es \",parametros)\r\n        if(parametros != null){\r\n            parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n            for (let i=0; i<parametros.length; i++){\r\n                console.log(parametros[i])\r\n                id_helados.push(parametros[i][1])\r\n            }\r\n            console.log(\"id helados es\",id_helados);\r\n            this.requestResults(id_helados);\r\n        }\r\n        console.log(\"state aca es\",this.state.datos);\r\n        console.log(\"rows es\",this.state.datos.rows);\r\n\r\n    }\r\n\r\n    handleGrafico = (filas) =>{\r\n        let sumaHoras = (horas) =>{\r\n            var dt = new Date();\r\n            console.log(\"antes dt es\", dt)\r\n            dt.setHours( dt.getHours() + horas );\r\n            console.log(\"despues dt es \", dt)\r\n            return dt;\r\n        }\r\n    \r\n        let corrige_horas = (rows) =>{\r\n            for(let i =0; i < rows.length; i++){\r\n                rows[i][3] = sumaHoras(rows[i][3]);\r\n                rows[i][4] = sumaHoras(rows[i][4]);\r\n            }\r\n            return rows\r\n        }\r\n        \r\n        let nuevo_filas = corrige_horas(filas);\r\n\r\n        let datos_graph= [\r\n            [\r\n                { type: 'string', label: 'Task ID' },\r\n                { type: 'string', label: 'Task Name' },\r\n                { type: 'string', label: 'Resource' },\r\n                { type: 'date', label: 'Start Date' },\r\n                { type: 'date', label: 'End Date' },\r\n                { type: 'number', label: 'Duration' },\r\n                { type: 'number', label: 'Percent Complete' },\r\n                { type: 'string', label: 'Dependencies' },\r\n            ]\r\n        ].concat(nuevo_filas);\r\n        \r\n        this.setState({datosGrafico: datos_graph})\r\n\r\n        console.log(\"datos grafico es\", this.state.datosGrafico)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Resultados scheduling</h1>\r\n                <h5>La duración óptima es de {this.state.datos.duracion_optima} horas.</h5>\r\n                {this.state.datos.rows &&<div style={{ display: 'flex', maxWidth: 900 }}>\r\n                    {console.log(\"datos_graph es\",datos_graph)}\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'1200px'}\r\n                        chartType=\"Gantt\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={this.state.datosGrafico}\r\n                        rootProps={{ 'data-testid': '3' }}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultadosScheduling;"]},"metadata":{},"sourceType":"module"}