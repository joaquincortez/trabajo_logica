{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\Documents\\\\Trabajo logica\\\\frontend\\\\src\\\\components\\\\Resultados.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\nimport Encabezado from './Encabezado';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nconst respuestas = {\n  \"fracaso\": \"Se ha producido un error.\",\n  \"materia_insuficiente\": \"No se han seleccionado materias suficientes para producir ningún helado, intente nuevamente.\",\n  \"opcion_no_disponible\": \"El objetivo de optimización indicado no está disponible.\"\n};\n\nclass Resultados extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestHelado = info => {\n      axios.post(\"http://localhost:8000/calculoshelado/\", info).then(res => {\n        console.log(res);\n        this.setState({\n          datosHelado: Object.keys(res.data).map(key => [key, res.data[key]])\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.requestMateria = info => {\n      axios.post(\"http://localhost:8000/calculosmateria/\", info).then(res => {\n        console.log(res);\n        this.setState({\n          datosMateria: Object.keys(res.data).map(key => [key, res.data[key]])\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.requestAmbos = (helados, materias, objetivo) => {\n      axios.post(\"http://localhost:8000/calculos/\", {\n        helados,\n        materias,\n        \"objetivo\": objetivo\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          resultOpt: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      datosHelado: [],\n      datosMateria: [],\n      resultOpt: {}\n    };\n  }\n\n  usarQuery() {\n    const search = window.location.href; // could be '?foo=bar'\n\n    let params = new URLSearchParams(search);\n    return params;\n  }\n\n  enviarRequest(sabores) {\n    const json = JSON.stringify(sabores);\n    axios.post('http://localhost:8000/calculos/', json, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  componentDidMount() {\n    let query = this.usarQuery();\n    let parametros = Array.from(query.entries());\n    let helados = {};\n    let materias = {};\n    parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\n\n    console.log(\"parametros son\", parametros);\n    let i = 0;\n\n    for (i; i < parametros.length - 1; i += 2) {\n      console.log(\"sabor\".localeCompare(parametros[i][0].substring(0, 5)) === 0);\n\n      if (\"sabor\".localeCompare(parametros[i][0].substring(0, 5)) === 0) {\n        console.log('entro');\n        helados[parametros[i][1]] = parametros[i + 1][1];\n        console.log(parametros[i][1] + \" \" + parametros[i + 1][1]);\n      } else break;\n    }\n\n    for (i; i < parametros.length - 1; i += 2) {\n      console.log('aca');\n      materias[parametros[i][1]] = parametros[i + 1][1];\n    }\n\n    let objetivo = parametros[parametros.length - 1][1];\n    console.log(\"sabores son\", helados);\n    console.log(\"materias son\", materias);\n    const resHelado = this.requestHelado(helados);\n    console.log(resHelado);\n    const resMateria = this.requestMateria(materias);\n    console.log(resMateria);\n    const resAmbos = this.requestAmbos(helados, materias, objetivo);\n    console.log(\"respuesta ambos es\", resAmbos);\n  }\n\n  render() {\n    console.log(this.state.datosMateria);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Encabezado, {\n      titulo: \"Optimizaci\\xF3n lineal\",\n      descripcion: \"Resultados de la consulta.\",\n      icono: faCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"seccion-result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Presupuesto en helados\"), this.state.datosHelado.map(elem => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Total en \", elem[0], \" es $\", elem[1]))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"seccion-result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Presupuesto en materias primas\"), this.state.datosMateria.map(elem => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Total en \", elem[0], \" es $\", elem[1]))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"seccion-result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Respuesta de Optimizaci\\xF3n\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"respuesta-opt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, this.state.resultOpt[\"resultado\"] === \"fracaso\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, respuestas[this.state.resultOpt[\"resultado\"]]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, respuestas[this.state.resultOpt[\"razon_fracaso\"]])), this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] === \"fracaso\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"El problema no tiene una soluci\\xF3n \\xF3ptima.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"No se pudo encontrar una soluci\\xF3n \\xF3ptima para las restricciones seleccionadas.\")), this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] === \"exito\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Resultados;","map":{"version":3,"sources":["C:/Users/joaqu/Documents/Trabajo logica/frontend/src/components/Resultados.js"],"names":["React","axios","faCode","Encabezado","defaults","xsrfCookieName","xsrfHeaderName","respuestas","Resultados","Component","constructor","props","requestHelado","info","post","then","res","console","log","setState","datosHelado","Object","keys","data","map","key","catch","err","requestMateria","datosMateria","requestAmbos","helados","materias","objetivo","resultOpt","state","usarQuery","search","window","location","href","params","URLSearchParams","enviarRequest","sabores","json","JSON","stringify","headers","componentDidMount","query","parametros","Array","from","entries","i","length","localeCompare","substring","resHelado","resMateria","resAmbos","render","elem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { faCode }  from '@fortawesome/free-solid-svg-icons';\r\nimport Encabezado from './Encabezado';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst respuestas = {\r\n    \"fracaso\": \"Se ha producido un error.\",\r\n    \"materia_insuficiente\": \"No se han seleccionado materias suficientes para producir ningún helado, intente nuevamente.\",\r\n    \"opcion_no_disponible\": \"El objetivo de optimización indicado no está disponible.\",\r\n};\r\n\r\nclass Resultados extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          datosHelado: [],\r\n          datosMateria: [],\r\n          resultOpt: {},\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    enviarRequest(sabores){\r\n        const json = JSON.stringify(sabores);\r\n        axios.post('http://localhost:8000/calculos/', json, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    }\r\n\r\n    requestHelado = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculoshelado/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosHelado: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestMateria = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculosmateria/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosMateria: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestAmbos = (helados, materias, objetivo) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculos/\", {helados, materias, \"objetivo\": objetivo})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ resultOpt: res.data })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let helados = {};\r\n        let materias = {}\r\n        parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n        console.log(\"parametros son\", parametros);\r\n        let i =0;\r\n        for(i; i<parametros.length-1; i+=2){\r\n            console.log(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0)\r\n            if(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0){\r\n                console.log('entro');\r\n                helados[parametros[i][1]] = parametros[i+1][1];\r\n                console.log(parametros[i][1] + \" \" + parametros[i+1][1])\r\n            }\r\n            else\r\n                break;\r\n        }\r\n\r\n        for(i; i<parametros.length -1; i+=2){\r\n            console.log('aca');\r\n            materias[parametros[i][1]] = parametros[i+1][1];\r\n        }\r\n\r\n        let objetivo = parametros[parametros.length-1][1]\r\n        console.log(\"sabores son\", helados);\r\n        console.log(\"materias son\",materias);\r\n        const resHelado = this.requestHelado(helados);\r\n        console.log(resHelado);\r\n        const resMateria = this.requestMateria(materias);\r\n        console.log(resMateria);\r\n        const resAmbos = this.requestAmbos(helados, materias, objetivo);\r\n        console.log(\"respuesta ambos es\", resAmbos);\r\n    }\r\n\r\n    render(){  \r\n        console.log(this.state.datosMateria);\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Optimización lineal\" descripcion = \"Resultados de la consulta.\" icono = {faCode}/>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en helados</h2>\r\n                    {this.state.datosHelado.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en materias primas</h2>\r\n                    {this.state.datosMateria.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                <h2>Respuesta de Optimización</h2>\r\n                    <div className=\"respuesta-opt\">\r\n                        {this.state.resultOpt[\"resultado\"] === \"fracaso\" && \r\n                            <div>\r\n                            <h3 className=\"text-danger\">{respuestas[this.state.resultOpt[\"resultado\"]]}</h3>\r\n                            <p>{respuestas[this.state.resultOpt[\"razon_fracaso\"]]}</p>\r\n                            </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"fracaso\" && \r\n                        <div>\r\n                            <h3 className=\"text-warning\">El problema no tiene una solución óptima.</h3>\r\n                            <p className=\"text-secondary\">No se pudo encontrar una solución óptima para las restricciones seleccionadas.</p>\r\n                        </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"exito\" &&\r\n                        <div> \r\n\r\n\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultados;"]},"metadata":{},"sourceType":"module"}