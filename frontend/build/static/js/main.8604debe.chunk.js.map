{"version":3,"sources":["components/NavBar.js","components/SeccionDato.js","components/SeccionForm.js","components/OpcionRadio.js","components/SeccionRadio.js","components/Encabezado.js","components/Resultados.js","components/FormOptimizacion.js","components/ResultadosScheduling.js","components/SelectJob.js","components/Scheduling.js","components/ResultadosPacking.js","components/InputCamion.js","components/SeccionCamiones.js","components/LineaCarga.js","components/SeccionCarga.js","components/Packing.js","components/Routing.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","React","Component","SeccionDato","props","render","bind","required","name","this","nombre","nro","value","datos","map","dato","key","min","SeccionForm","state","nuevosInputs","AgregarOpcion","nuevoInput","length","setState","prevState","concat","axios","get","nombreAPI","then","res","data","catch","err","console","log","mostrarItems","icon","iconoTitulo","titulo","nombreTipo","iconoCantidad","nombreCantidad","input","replace","toLowerCase","onClick","faPlus","OpcionRadio","defaultChecked","checked","SeccionRadio","Encabezado","icono","descripcion","defaults","xsrfCookieName","xsrfHeaderName","respuestas","Resultados","requestHelado","info","post","datosHelado","Object","keys","requestMateria","datosMateria","requestAmbos","helados","materias","objetivo","resultOpt","search","window","location","URLSearchParams","sabores","json","JSON","stringify","headers","query","usarQuery","parametros","Array","from","entries","i","localeCompare","substring","resHelado","resMateria","resAmbos","faCode","elem","optimizacion","soluciones","solucion","cantidad","FormOptimizacion","mostrarResultados","e","resultados","ocultarResultados","action","method","onSubmit","faIceCream","faChartLine","faBox","faBoxes","faCalculator","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","ResultadosScheduling","requestResults","hel","handleGrafico","rows","filas","sumaHoras","horas","dt","Date","setHours","getHours","nuevo_filas","corrige_horas","datos_graph","label","datosGrafico","id_helados","push","duracion_optima","style","display","maxWidth","width","height","chartType","loader","rootProps","SelectJob","orden","Scheduling","AgregarSelect","nuevoSelect","selects","onClickBtn","mostrarResults","cargarItems","faCalendarAlt","select","ResultadosPacking","capacidadCamiones","tamanos","cantCajas","capacidades","cantidades","camiones","valor_total","peso_total","camion","capacidad","carga","peso","item","valor","valor_camion","peso_camion","InputCamion","readonly","placeholder","SeccionCamiones","AgregarCamion","inputCamiones","faTruck","LineaCarga","SeccionCarga","cargarHelados","AgregarCarga","nuevaCarga","cargas","faTruckLoading","Packing","onHandleSubmit","persist","Routing","faMapMarkedAlt","App","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8604debe.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\n\r\n\r\nclass NavBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">Panel Optimización</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">Optimización lineal<span className=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/packing\" tabIndex=\"-1\" aria-disabled=\"false\">Packing</a>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/scheduling\" tabIndex=\"-1\" aria-disabled=\"false\">Scheduling</a>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/routing\" tabIndex=\"-1\" aria-disabled=\"false\">Routing</a>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"http://127.0.0.1:8000/admin/\">Panel de administración</a>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar; ","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\n\r\nclass SeccionDato extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.render = this.render.bind(this);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-9 text-center\">\r\n                    <select required name = {this.props.nombre + this.props.nro}  className=\"custom-select\" id=\"inputGroupSelect01\">\r\n                        <option id=\"-1\" value=\"\" >Seleccionar opción</option>\r\n                        {this.props.datos.map(dato => (<option key = {dato.id} id={dato.id} value= {dato.id}>{dato.nombre}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-3 text-center\">\r\n                    <div className=\"input-group\">\r\n                        <input required name = {\"cant\" + this.props.nombre + this.props.nro} type=\"number\" min=\"1\" className=\"form-control\" aria-label=\"Demanda en kg\"></input>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\">kg</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeccionDato;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\nimport SeccionDato from './SeccionDato';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from \"axios\";\r\n\r\n\r\nclass SeccionForm extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      nuevosInputs: [1,2],\r\n      datos: [],\r\n    }\r\n    this.AgregarOpcion = this.AgregarOpcion.bind(this);\r\n  }\r\n\r\n  AgregarOpcion(){\r\n    let nuevoInput = this.state.nuevosInputs.length;\r\n    this.setState( prevState => ({nuevosInputs: prevState.nuevosInputs.concat([nuevoInput])}))\r\n  }\r\n\r\n  mostrarItems(){\r\n    axios\r\n    .get(\"http://localhost:8000/api/\"+this.props.nombreAPI+ \"/\")\r\n    .then(res => this.setState({ datos: res.data }))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mostrarItems();\r\n  }\r\n\r\n  render(){\r\n      return(\r\n          <div className=\"seccionForm\">\r\n              <div className=\"encabezado\">\r\n          <h2><FontAwesomeIcon icon = {this.props.iconoTitulo} /> {this.props.titulo}</h2>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-9 text\">\r\n              <h4>{this.props.nombreTipo}</h4>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h4><FontAwesomeIcon icon = {this.props.iconoCantidad} /> {this.props.nombreCantidad}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {this.state.nuevosInputs.map(input => <SeccionDato nombre={this.props.nombreTipo.replace(/\\s/g, '').toLowerCase()} key = {input.id} datos = {this.state.datos} nro = {input}/> )}\r\n        </div>\r\n          <button type=\"button\" className=\"btn btn-secondary\" id=\"agregarSabor\" onClick = {this.AgregarOpcion}><FontAwesomeIcon icon={faPlus}/> Agregar {this.props.nombreTipo}</button>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default SeccionForm;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\n\r\nclass OpcionRadio extends React.Component{\r\n    render(){ //revisar value\r\n        return(\r\n            <div className=\"form-check\">\r\n                  <input className=\"form-check-input\" type=\"radio\" name=\"objetivo\" value={this.props.nombre.replace(/\\s/g, '').toLowerCase()} defaultChecked = {this.props.checked}></input> \r\n                  <label className=\"form-check-label\">\r\n                    {this.props.nombre}\r\n                  </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OpcionRadio;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\nimport OpcionRadio from './OpcionRadio';\r\n\r\nclass SeccionRadio extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"seccionForm\">\r\n                <fieldset className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <legend className=\"col-form-label col-sm-2 pt-0\">{this.props.nombre}</legend>\r\n                        <div className=\"col-sm-10\">\r\n                            <OpcionRadio checked = \"true\" nombre='Maximizar ganancias'/>\r\n                            <OpcionRadio nombre='Maximizar produccion'/>\r\n                            <OpcionRadio nombre='Minimizar costos'/>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeccionRadio;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react';;\r\nfunction Encabezado(props){\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\"><FontAwesomeIcon icon={props.icono} /> {props.titulo}</h1>\r\n            <p className=\"lead\">{props.descripcion}</p>\r\n            <hr></hr>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Encabezado;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { faCode }  from '@fortawesome/free-solid-svg-icons';\r\nimport Encabezado from './Encabezado';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst respuestas = {\r\n    \"fracaso\": \"Se ha producido un error.\",\r\n    \"materia_insuficiente\": \"No se han seleccionado materias suficientes para producir ningún helado, intente nuevamente.\",\r\n    \"opcion_no_disponible\": \"El objetivo de optimización indicado no está disponible.\",\r\n    \"maximizacion_ganancias\": \"Maximizar las ganancias\",\r\n    \"minimizacion_costos\": \"Minimizar los costos\",\r\n    \"maximizacion_producción\": \"Maximizar la producción\",\r\n\r\n};\r\n\r\nclass Resultados extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          datosHelado: [],\r\n          datosMateria: [],\r\n          resultOpt: {},\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    enviarRequest(sabores){\r\n        const json = JSON.stringify(sabores);\r\n        axios.post('http://localhost:8000/calculos/', json, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    }\r\n\r\n    requestHelado = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculoshelado/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosHelado: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestMateria = (info) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculosmateria/\", info)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datosMateria: Object.keys(res.data).map((key) => [key, res.data[key]]) })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    requestAmbos = (helados, materias, objetivo) => {\r\n        axios\r\n        .post(\"http://localhost:8000/calculos/\", {helados, materias, \"objetivo\": objetivo})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ resultOpt: res.data })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let helados = {};\r\n        let materias = {}\r\n        parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n        console.log(\"parametros son\", parametros);\r\n        let i =0;\r\n        for(i; i<parametros.length-1; i+=2){\r\n            console.log(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0)\r\n            if(\"sabor\".localeCompare(parametros[i][0].substring(0,5)) === 0){\r\n                console.log('entro');\r\n                helados[parametros[i][1]] = parametros[i+1][1];\r\n                console.log(parametros[i][1] + \" \" + parametros[i+1][1])\r\n            }\r\n            else\r\n                break;\r\n        }\r\n\r\n        for(i; i<parametros.length -1; i+=2){\r\n            console.log('aca');\r\n            materias[parametros[i][1]] = parametros[i+1][1];\r\n        }\r\n\r\n        let objetivo = parametros[parametros.length-1][1]\r\n        console.log(\"sabores son\", helados);\r\n        console.log(\"materias son\",materias);\r\n        const resHelado = this.requestHelado(helados);\r\n        console.log(resHelado);\r\n        const resMateria = this.requestMateria(materias);\r\n        console.log(resMateria);\r\n        const resAmbos = this.requestAmbos(helados, materias, objetivo);\r\n        console.log(\"respuesta ambos es\", resAmbos);\r\n    }\r\n\r\n    render(){ \r\n        console.log(this.state.datosMateria);\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Optimización lineal\" descripcion = \"Resultados de la consulta.\" icono = {faCode}/>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en helados</h2>\r\n                    {this.state.datosHelado.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                    <h2>Presupuesto en materias primas</h2>\r\n                    {this.state.datosMateria.map(elem => \r\n                        <li>Total en {elem[0]} es ${elem[1]}</li>\r\n                        )}\r\n                </div>\r\n                <div className=\"seccion-result\">\r\n                <h2>Respuesta de Optimización</h2>\r\n                    <div>\r\n                        {this.state.resultOpt[\"resultado\"] === \"fracaso\" && \r\n                            <div>\r\n                            <h3 className=\"text-danger\">{respuestas[this.state.resultOpt[\"resultado\"]]}</h3>\r\n                            <p>{respuestas[this.state.resultOpt[\"razon_fracaso\"]]}</p>\r\n                            </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"fracaso\" && \r\n                        <div>\r\n                            <h3 className=\"text-warning\">El problema no tiene una solución óptima.</h3>\r\n                            <p className=\"text-secondary\">No se pudo encontrar una solución óptima para las restricciones seleccionadas.</p>\r\n                        </div>}\r\n                        {this.state.resultOpt[\"optimizacion\"] && this.state.resultOpt[\"optimizacion\"][\"resultado\"] ===\"exito\" &&\r\n                        <div> \r\n                            <h4>Objetivo: {respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]]}</h4>\r\n                            <h5>Se produjeron ganancias por ${this.state.resultOpt[\"optimizacion\"][\"objective_value\"]}</h5>\r\n                            <h5>Se deben producir las siguientes cantidades de helados para {respuestas[this.state.resultOpt[\"optimizacion\"][\"objetivo\"]].toLowerCase()}:</h5>\r\n                            <ul>\r\n                                {this.state.resultOpt.optimizacion.soluciones.map(solucion =>\r\n                                    <li>\r\n                                        {console.log(\"solucion es\", solucion)}\r\n                                        {solucion.cantidad} unidades de {solucion.nombre}\r\n                                    </li> )}\r\n                            </ul>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultados;","import React, {useState} from 'react';\r\nimport SeccionForm from './SeccionForm';\r\nimport SeccionRadio from './SeccionRadio';\r\nimport Encabezado from './Encabezado';\r\nimport Resultados from './Resultados';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faIceCream, faChartLine, faBox, faBoxes, faCalculator, faCode } from '@fortawesome/free-solid-svg-icons'\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nfunction Example() {\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch demo modal\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Resultados de Optimización</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><Resultados /> </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Aceptar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nclass FormOptimizacion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            resultados: false,\r\n        }\r\n    }\r\n\r\n    mostrarResultados = (e) =>{\r\n        //e.preventDefault();\r\n        this.setState({resultados: true})\r\n    }\r\n\r\n    ocultarResultados = () =>{\r\n        this.setState({resultados: false})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Optimización lineal\" descripcion = \"Optimización de la producción semanal de helados.\" icono = {faCode}/>\r\n                <form action='/resultados' method=\"get\" onSubmit={this.mostrarResultados}>\r\n                    <SeccionForm titulo = \"Sabores a producir\" nombreTipo= \"Sabor\" nombreCantidad = \"Demanda\" iconoTitulo =  {faIceCream} iconoCantidad = {faChartLine} nombreAPI =\"helados\" />\r\n                    <SeccionForm titulo = \"Materias primas disponibles\" nombreTipo= \"Materia Prima\" nombreCantidad = \"Disponibilidad\" iconoTitulo =  {faBox} iconoCantidad = {faBoxes} nombreAPI=\"materiasprima\"/>\r\n                    <SeccionRadio nombre = 'Objetivo'/>\r\n                    <button type=\"submit\" className=\"btn btn-dark\" ><FontAwesomeIcon icon = {faCalculator} /> Calcular</button>\r\n                </form>\r\n                <Modal show={this.state.resultados} onHide={this.ocultarResultados}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Resultados de Optimización</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body><Resultados /> </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={this.ocultarResultados}>\r\n                        Aceptar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormOptimizacion;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nclass ResultadosScheduling extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            datos: [],\r\n            datosGrafico: [],\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; // could be '?foo=bar'\r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    requestResults = (hel) => {\r\n        axios\r\n        .post(\"http://localhost:8000/scheduling/\", {helados: hel})\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datos: res.data });\r\n            this.handleGrafico(res.data.rows);\r\n        })\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        let id_helados = [];\r\n        console.log(\" parametros es \",parametros)\r\n        if(parametros != null){\r\n            parametros[0][0] = \"sabor1\"; //porque devuelve como primero toda la url\r\n            for (let i=0; i<parametros.length; i++){\r\n                console.log(parametros[i])\r\n                id_helados.push(parametros[i][1])\r\n            }\r\n            console.log(\"id helados es\",id_helados);\r\n            this.requestResults(id_helados);\r\n        }\r\n        console.log(\"state aca es\",this.state.datos);\r\n        console.log(\"rows es\",this.state.datos.rows);\r\n\r\n    }\r\n\r\n    handleGrafico = (filas) =>{\r\n        let sumaHoras = (horas) =>{\r\n            var dt = new Date();\r\n            console.log(\"antes dt es\", dt)\r\n            dt.setHours( dt.getHours() + horas );\r\n            console.log(\"despues dt es \", dt)\r\n            return dt;\r\n        }\r\n    \r\n        let corrige_horas = (rows) =>{\r\n            for(let i =0; i < rows.length; i++){\r\n                rows[i][3] = sumaHoras(rows[i][3]);\r\n                rows[i][4] = sumaHoras(rows[i][4]);\r\n            }\r\n            return rows\r\n        }\r\n        \r\n        let nuevo_filas = corrige_horas(filas);\r\n\r\n        let datos_graph= [\r\n            [\r\n                { type: 'string', label: 'Task ID' },\r\n                { type: 'string', label: 'Task Name' },\r\n                { type: 'string', label: 'Resource' },\r\n                { type: 'date', label: 'Start Date' },\r\n                { type: 'date', label: 'End Date' },\r\n                { type: 'number', label: 'Duration' },\r\n                { type: 'number', label: 'Percent Complete' },\r\n                { type: 'string', label: 'Dependencies' },\r\n            ]\r\n        ].concat(nuevo_filas);\r\n        \r\n        this.setState({datosGrafico: datos_graph})\r\n\r\n        console.log(\"datos grafico es\", this.state.datosGrafico)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Resultados scheduling</h1>\r\n                <h5>La duración óptima es de {this.state.datos.duracion_optima} horas.</h5>\r\n                <div style={{ display: 'flex', maxWidth: 900 }}>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'1200px'}\r\n                        chartType=\"Gantt\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={this.state.datosGrafico}\r\n                        rootProps={{ 'data-testid': '3' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultadosScheduling;","import React from 'react';\r\n\r\nclass SelectJob extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            orden : [\"primer\", \"segundo\", \"tercer\", \"cuarto\", \"quinto\",\"sexto\",\"septimo\",\"octavo\", \"noveno\", \"decimo\", \"decimo primer\",\r\n            \"decimo segundo\", \"decimo tercer\", \"decimo cuarto\", \"decimo quinto\"],\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <select required name = {this.props.nombre} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                    <option value=\"\">Elegir {this.state.orden[this.props.nro]} helado a producir...</option>\r\n                    {this.props.datos.map(dato => (<option name={this.props.nombre} key = {dato.id} id={dato.id} value= {dato.id}>{dato.nombre}</option>))}\r\n                </select>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectJob;","import React from 'react';\r\nimport Encabezado from './Encabezado';\r\nimport ResultadosScheduling from './ResultadosScheduling'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt, faPlus, faCalculator } from '@fortawesome/free-solid-svg-icons';\r\nimport SelectJob from './SelectJob'\r\nimport axios from 'axios';\r\nimport '../css/optimizacion.css';\r\n\r\nclass Scheduling extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            selects: [1,2],\r\n            mostrarResults: false,\r\n        }\r\n\r\n    }\r\n\r\n    AgregarSelect = ()=>{\r\n        let nuevoSelect = this.state.selects.length + 1;\r\n        this.setState( prevState => ({selects: prevState.selects.concat([nuevoSelect])}))\r\n      }\r\n    cargarItems(){\r\n        axios\r\n        .get(\"http://localhost:8000/api/helados/\")\r\n        .then(res => this.setState({ datos: res.data }))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.cargarItems();\r\n    }\r\n\r\n    onClickBtn = () =>{\r\n        this.setState({mostrarResults: true})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Scheduling\" descripcion = \"Optimizar el orden a la hora de utilizar maquinas para realizar tareas.\" icono = {faCalendarAlt} />\r\n                <form action =  '/scheduling' method=\"get\" >\r\n                    <h2>Elegir helados a producir en orden.</h2>\r\n                    <div className = \"scheduling\">\r\n                        {this.state.selects.map(select => <SelectJob nro={select -1} nombre={\"sabor\" + select} key = {select} datos = {this.state.datos}/> )}\r\n                        <button type=\"button\" className=\"btn btn-secondary\" id=\"agregarHelado\" onClick = {this.AgregarSelect}><FontAwesomeIcon icon={faPlus}/> Agregar helado</button>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-dark\" onSubmit = {this.onClickBtn}><FontAwesomeIcon icon = {faCalculator} /> Calcular</button>\r\n                    {console.log(\"mostrar results es \", this.state.mostrarResults)}\r\n                    {true && <ResultadosScheduling/>}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scheduling;","import React from 'react';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nconst respuestas = {\r\n    \"fracaso\": \"Se ha producido un error.\",\r\n    \"opcion_no_disponible\": \"El objetivo de optimización indicado no está disponible.\",\r\n\r\n};\r\n\r\nclass ResultadosPacking extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            datos: [],\r\n        }\r\n    }\r\n\r\n    usarQuery() {\r\n        const search = window.location.href; \r\n        let params =  new URLSearchParams(search)\r\n        return params;\r\n    }\r\n\r\n    requestResults = (data) => {\r\n        axios\r\n        .post(\"http://localhost:8000/packing/\", data)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ datos: res.data })})\r\n        .catch(err => {console.log(err)});\r\n    }\r\n\r\n    componentDidMount(){\r\n        let query = this.usarQuery();\r\n        let parametros = Array.from(query.entries());\r\n        \r\n        let capacidadCamiones = []\r\n        let helados = [];\r\n        let tamanos = [];\r\n        let cantCajas = []\r\n        console.log(\" parametros es \",parametros)\r\n        parametros[0][0] = \"camion1\"; //porque devuelve como primero toda la url\r\n        let i=0;\r\n        while(i< parametros.length && \"camion\".localeCompare(parametros[i][0].substring(0,6)) === 0){\r\n            capacidadCamiones.push(parametros[i][1]);\r\n            i++;\r\n        }\r\n        for(i; i<parametros.length; i+=3){\r\n            helados.push(parametros[i][1]);\r\n            tamanos.push(parametros[i+1][1]);\r\n            cantCajas.push(parametros[i+2][1]);\r\n        }\r\n\r\n        let data = { capacidades: capacidadCamiones, helados:helados, tamanos: tamanos, cantidades: cantCajas}\r\n        console.log(\"data es: \",data);\r\n        this.requestResults(data)\r\n\r\n    }\r\n\r\n    render(){\r\n        const datos = this.state.datos\r\n        return(\r\n            <div>\r\n                <h1>Resultados packing</h1>\r\n                <div>\r\n                    {this.state.datos[\"resultado\"] === \"fracaso\" && \r\n                        <div>\r\n                        <h3 className=\"text-danger\">{respuestas[this.state.datos[\"resultado\"]]}</h3>\r\n                        <p>{respuestas[this.state.datos[\"razon_fracaso\"]]}</p>\r\n                        </div>}\r\n                    {this.state.datos[\"resultado\"] ===\"exito\" &&\r\n                    <div> \r\n                        <h5>Se ha almacenado un valor total en los {datos.camiones.length} camiones de ${datos.valor_total}.</h5>\r\n                        <h5>Se ha almacenado un peso total en los {datos.camiones.length} camiones de {datos.peso_total}kg.</h5>\r\n                        {datos.camiones.map(camion =>\r\n                            <div>\r\n                                <h5>Camión - Capacidad {camion.capacidad}kg.</h5>\r\n                                <ul>\r\n                                    {camion.carga.map(carga =>\r\n                                    <li>Se han almacenado {carga.cantidad} cajas de {carga.peso}kg de {carga.item} - Aportando un valor de ${carga.valor} y un peso de {carga.peso * carga.cantidad}kg.</li>\r\n                                    )}\r\n                                </ul>\r\n                                <p>En total, el camión ha almacenado un valor total de ${camion.valor_camion} y un peso de {camion.peso_camion}kg.</p>\r\n                            </div>    \r\n                        )}\r\n\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultadosPacking;","import React from 'react';\r\n\r\nclass InputCamion extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"form-inline\">\r\n                <div className=\"form-group mb-2\">\r\n                    <input type=\"text\" readonly className=\"form-control-plaintext\" id=\"staticEmail2\" value= {\"Camion \" + this.props.nro} />\r\n                </div>\r\n                <div className=\"form-group mx-sm-3 mb-2\">\r\n                <div className=\"input-group\">\r\n                        <input required min = \"100\" name = {\"camion\"+ this.props.nro} type=\"number\" className=\"form-control\" aria-label=\"Cantidad en kg\" placeholder=\"Ingresar capacidad\"></input>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\">kg</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputCamion;","import React from 'react';\r\nimport InputCamion from './InputCamion';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTruck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SeccionCamiones extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inputCamiones:[1],\r\n        }\r\n\r\n    }\r\n\r\n    AgregarCamion = () =>{\r\n        console.log(\"hola\")\r\n        let nuevoInput = this.state.inputCamiones.length + 1;\r\n        this.setState( prevState => ({inputCamiones: prevState.inputCamiones.concat([nuevoInput])}))\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2><FontAwesomeIcon icon={faTruck}/> Camiones</h2>\r\n                <p>Especificar cantidad de camiones y capacidad de cada uno.</p>\r\n                {this.state.inputCamiones.map(input => <InputCamion key = {input} nro = {input}/> )}\r\n                <button type=\"button\" className=\"btn btn-secondary seccionCamion\" id=\"agregarCamion\" onClick={this.AgregarCamion} ><FontAwesomeIcon icon={faPlus}/> Agregar camión</button>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default SeccionCamiones;","import React from 'react';\r\n\r\nclass LineaCarga extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-5 text-center\">\r\n                    <select name = {\"helado\"+this.props.nro}  className=\"custom-select\" id=\"inputGroupSelect01\" required>\r\n                        <option id=\"-1\" value=\"\" >Seleccionar helado</option>\r\n                        {this.props.helados.map(dato => (<option key = {dato.id} id={dato.id} value= {dato.id}>{dato.nombre}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-4 text-center\">\r\n                    <select name = {\"tamano\"+this.props.nro}  className=\"custom-select\" id=\"inputGroupSelect01\" required>\r\n                        <option id=\"-1\" value=\"\" >Seleccionar tamaño de cajas</option>\r\n                        <option id=\"1\" value=\"10\" >Caja pequeña (10kg)</option>\r\n                        <option id=\"2\" value=\"20\" >Caja mediana (20kg)</option>\r\n                        <option id=\"3\" value=\"50\" >Caja grande (50kg)</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-3 text-center\">\r\n                    <div className=\"input-group\">\r\n                        <input name = {\"cantidad\"+this.props.nro} type=\"number\" className=\"form-control\" aria-label=\"Cantidad de cajas\" placeholder=\"Ingresar cantidad\" required min=\"1\"></input>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\">Cajas</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineaCarga;","import React from 'react';\r\nimport LineaCarga from './LineaCarga'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTruckLoading } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from \"axios\";\r\n\r\nclass SeccionCarga extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cargas: [1],\r\n            helados : [],\r\n        }\r\n\r\n    }\r\n\r\n    cargarHelados = () =>{\r\n        axios\r\n        .get(\"http://localhost:8000/api/helados/\")\r\n        .then(res => this.setState({ helados: res.data }))\r\n        .catch(err => console.log(err));\r\n      }\r\n\r\n    AgregarCarga = () =>{\r\n        console.log(\"hola\")\r\n        let nuevaCarga = this.state.cargas.length + 1;\r\n        this.setState( prevState => ({cargas: prevState.cargas.concat([nuevaCarga])}))\r\n        console.log(this.state.helados)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.cargarHelados()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2><FontAwesomeIcon icon={faTruckLoading}/> Carga</h2>\r\n                <p>Especificar para cada sabor de helado, cuantas cajas y de qué tamaño.</p>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-5 text\">\r\n                        <h4>Helado</h4>\r\n                    </div>\r\n                    <div className=\"col-4 text\">\r\n                        <h4>Tamaño</h4>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h4>Cantidad</h4>\r\n                    </div>\r\n                </div>\r\n                {this.state.cargas.map(carga => <LineaCarga key = {carga} nro = {carga} helados = {this.state.helados}/> )}\r\n                <button type=\"button\" className=\"btn btn-secondary\" id=\"agregarCarga\" onClick = {this.AgregarCarga}><FontAwesomeIcon icon={faPlus}/> Agregar carga</button>\r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default SeccionCarga;","import React from 'react';\r\nimport Encabezado from './Encabezado';\r\nimport ResultadosPacking from './ResultadosPacking';\r\nimport SeccionCamiones from './SeccionCamiones';\r\nimport SeccionCarga from './SeccionCarga';\r\nimport {faBoxes, faCalculator} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/optimizacion.css';\r\n\r\nclass Packing extends React.Component{\r\n\r\n    onHandleSubmit = (e)=> {\r\n        e.persist();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Encabezado titulo = \"Packing\" descripcion = \"Optimizar el espacio.\" icono = {faBoxes} />\r\n                <form action =  '/packing' method=\"get\" onSubmit={this.onHandleSubmit} >\r\n                    <SeccionCamiones />\r\n                    <hr className=\"espacioAbajo\"></hr>\r\n                    <SeccionCarga/>\r\n                    <hr className=\"espacioAbajo\"></hr>\r\n                    <button type=\"submit\" className=\"btn btn-dark\" ><FontAwesomeIcon icon = {faCalculator} /> Calcular</button>\r\n                    <hr className=\"espacioAbajo\"></hr>\r\n                    <ResultadosPacking/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Packing;","import React from 'react';\r\nimport Encabezado from './Encabezado';\r\nimport {faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Routing extends React.Component{\r\n    render(){\r\n        return(\r\n            <Encabezado titulo = \"Routing\" descripcion = \"Optimizar el orden a la hora de utilizar maquinas para realizar tareas.\" icono = {faMapMarkedAlt} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routing;","import React from 'react';\nimport NavBar from './components/NavBar';\nimport FormOptimizacion from './components/FormOptimizacion';\nimport Resultados from './components/Resultados';\nimport Scheduling from './components/Scheduling'\nimport Packing from './components/Packing'\nimport Routing from './components/Routing'\nimport './css/optimizacion.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div className = 'container'>\n            <div className=\"jumbotron jumbotron-fluid\">\n              <div className=\"container\">\n                <Switch>\n                  <Route path = '/' exact><FormOptimizacion /></Route>\n                  <Route path = '/resultados' ><Resultados /></Route>\n                  <Route path = '/scheduling' ><Scheduling /></Route>\n                  <Route path = '/routing' ><Routing /></Route>\n                  <Route path = '/packing' ><Packing /></Route>\n                </Switch>\n              </div>\n            </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}